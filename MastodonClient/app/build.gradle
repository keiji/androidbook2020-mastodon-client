apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
       jvmTarget = 1.8
    }

    dataBinding {
        enabled true
    }

    defaultConfig {
        applicationId "io.keiji.sample.mastodonclient"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "test", "\"test\"")

        def instanceProperties = project.rootProject.file('instance.properties')
        if (!instanceProperties.exists()) {
            instanceProperties.createNewFile()
        }

        def prop = new Properties()
        prop.load(project.rootProject.file('instance.properties').newDataInputStream())
        def INSTANCE_URL = prop.getProperty("instance_url") ?: ""
        def USERNAME = prop.getProperty("username") ?: ""
        def ACCESS_TOKEN = prop.getProperty("access_token") ?: ""
        def CLIENT_KEY = prop.getProperty("client_key") ?: ""
        def CLIENT_SECRET = prop.getProperty("client_secret") ?: ""
        def CLIENT_SCOPES = prop.getProperty("client_scopes") ?: ""
        def CLIENT_REDIRECT_URI = prop.getProperty("client_redirect_uri") ?: ""

        buildConfigField("String", "INSTANCE_URL", "\"${INSTANCE_URL}\"")
        buildConfigField("String", "USERNAME", "\"${USERNAME}\"")
        buildConfigField("String", "ACCESS_TOKEN", "\"${ACCESS_TOKEN}\"")
        buildConfigField("String", "CLIENT_KEY", "\"${CLIENT_KEY}\"")
        buildConfigField("String", "CLIENT_SECRET", "\"${CLIENT_SECRET}\"")
        buildConfigField("String", "CLIENT_SCOPES", "\"${CLIENT_SCOPES}\"")
        buildConfigField("String", "CLIENT_REDIRECT_URI", "\"${CLIENT_REDIRECT_URI}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.3'
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
    implementation("com.squareup.moshi:moshi-kotlin:1.9.2")
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
